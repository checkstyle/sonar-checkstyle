<?xml version="1.0" encoding="UTF-8"?>
<checkstyle-metadata>
  <module>
    <check name="EmptyBlock" fullyQualifiedName="com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck"
           parent="TreeWalker">
      <description><![CDATA[<p>Checks for empty blocks. This check does not validate sequential blocks.</p>
        <p>Sequential blocks won't be checked. Also, no violations for fallthrough:</p>
        <pre>switch (a) {
                case 1:                          // no violation
                case 2:                          // no violation
                case 3: someMethod(); { }        // no violation
                default: break;
              }</pre>
        <p>This check processes LITERAL_CASE and LITERAL_DEFAULT separately.
              So, if tokens=LITERAL_DEFAULT, following code will not trigger any violation,
              as the empty block belongs to LITERAL_CASE:</p>
        <p>Configuration:</p>
        <pre>&lt;module name="EmptyBlock"&gt;
                &lt;property name="tokens" value="LITERAL_DEFAULT"/&gt;
              &lt;/module&gt;</pre>
        <p>Result:</p>
        <pre>switch (a) {
                default:        // no violation for "default:" as empty block belong to "case 1:"
                case 1: { }
              }</pre>]]></description>
      <properties>
        <property name="option" type="com.puppycrawl.tools.checkstyle.checks.blocks.BlockOption"
                  default-value="statement" value-type="scalar">
          <description>specify the policy on block contents.</description>
          <property-options>
            <property-option value="statement" />
            <property-option value="text" />
          </property-options>
        </property>
        <property name="tokens" type="tokens"
                  default-value="LITERAL_WHILE,LITERAL_TRY,LITERAL_FINALLY,LITERAL_DO,LITERAL_IF,LITERAL_ELSE,LITERAL_FOR,INSTANCE_INIT,STATIC_INIT,LITERAL_SWITCH,LITERAL_SYNCHRONIZED"
                  value-type="set">
          <description>tokens to check</description>
          <property-options>
            <property-option value="LITERAL_WHILE" />
            <property-option value="LITERAL_TRY" />
            <property-option value="LITERAL_CATCH" />
            <property-option value="LITERAL_FINALLY" />
            <property-option value="LITERAL_DO" />
            <property-option value="LITERAL_IF" />
            <property-option value="LITERAL_ELSE" />
            <property-option value="LITERAL_FOR" />
            <property-option value="INSTANCE_INIT" />
            <property-option value="STATIC_INIT" />
            <property-option value="LITERAL_SWITCH" />
            <property-option value="LITERAL_SYNCHRONIZED" />
            <property-option value="LITERAL_CASE" />
            <property-option value="LITERAL_DEFAULT" />
            <property-option value="ARRAY_INIT" />
          </property-options>
        </property>
      </properties>
      <message-keys>
        <message-key key="block.noStatement" />
        <message-key key="block.empty" />
      </message-keys>
    </check>
  </module>
</checkstyle-metadata>
