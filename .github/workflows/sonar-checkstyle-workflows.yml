name: sonar-checkstyle-workflows

on:
  push:
    branches:
      - master
  pull_request:

env:
  SONAR_APP_VERSION: '9.0.1.46107'

jobs:
  mvn-install:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java-version: [ '11' ]
        maven-version: [ '3.8.5' ]

    steps:
      - name: Setup Maven
        uses: s4u/setup-maven-action@v1.4.0
        with:
          java-distribution: 'corretto'
          java-version: '${{ matrix.java-version }}'
          maven-version: '${{ matrix.maven-version }}'

      - name: Maven Install
        run: |
          mvn -e clean install

  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java-version: [ '11' ]
        maven-version: [ '3.8.5' ]

    steps:
      - name: Setup Maven
        uses: s4u/setup-maven-action@v1.4.0
        with:
          java-distribution: 'corretto'
          java-version: '${{ matrix.java-version }}'
          maven-version: '${{ matrix.maven-version }}'

      - name: Run Tests
        run: |
          mvn test-compile surefire:test

  verify:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java-version: [ '11' ]
        maven-version: [ '3.8.5' ]

    steps:
      - name: Setup Maven
        uses: s4u/setup-maven-action@v1.4.0
        with:
          java-distribution: 'corretto'
          java-version: '${{ matrix.java-version }}'
          maven-version: '${{ matrix.maven-version }}'

      - name: Run Verification
        run: |
          mvn verify -DskipTests=true

  integration-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java-version: [ '11' ]
        maven-version: [ '3.8.5' ]

    steps:
      - name: Setup Maven
        uses: s4u/setup-maven-action@v1.4.0
        with:
          java-distribution: 'corretto'
          java-version: '${{ matrix.java-version }}'
          maven-version: '${{ matrix.maven-version }}'

      - name: Download Sonar
        run: |
          if [[ ! -f ~/.m2/sonar-application-${{ env.SONAR_APP_VERSION }}.zip ]]; then
            URL="https://repox.jfrog.io/repox/sonarsource/org/sonarsource/sonarqube/"
            URL=${URL}"sonar-application/${{ env.SONAR_APP_VERSION }}/sonar-application-${{ env.SONAR_APP_VERSION }}.zip"
            wget -q ${URL} -O ~/.m2/sonar-application-${{ env.SONAR_APP_VERSION }}.zip
          fi
          mkdir -p target/temp-downloads
          cp ~/.m2/sonar-application-${{ env.SONAR_APP_VERSION }}.zip target/temp-downloads/

      - name: Create Snapshot Package
        run: |
          mvn package -Pno-validations
      - name: Run Integration Tests
        run: |
          mvn test-compile failsafe:integration-test -DskipITs=false

  nondex:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java-version: [ '11' ]
        maven-version: [ '3.8.5' ]

    steps:
      - name: Setup Maven
        uses: s4u/setup-maven-action@v1.4.0
        with:
          java-distribution: 'corretto'
          java-version: '${{ matrix.java-version }}'
          maven-version: '${{ matrix.maven-version }}'
      
      - name: Maven Nondex
        run: |
          mvn --fail-never clean nondex:nondex -Dcheckstyle.skip=true
      - name: Analyze Nondex
        run: |
          cat `grep -RlE 'td class=.x' .nondex/ | cat` < /dev/null > output.txt
          RESULT="$(cat output.txt | wc -c)"
          cat output.txt
          if [[ "$RESULT" != 0 ]]; then false; fi

  sonarqube-validation:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java-version: [ '11' ]
        maven-version: [ '3.8.5' ]

    steps:
      - name: Break Build if SONAR_TOKEN is not set
        run: |
          if [[ -z "${{ secrets.SONAR_TOKEN }}" ]]; then
            echo "SONAR_TOKEN is not set."
            exit 1
          fi

      - name: Setup Maven
        uses: s4u/setup-maven-action@v1.4.0
        with:
          java-distribution: 'corretto'
          java-version: '${{ matrix.java-version }}'
          maven-version: '${{ matrix.maven-version }}'
      - name: Checkout Sonar Build Breaker
        uses: actions/checkout@v3
        with:
          repository: viesure/blog-sonar-build-breaker
          path: .ci-build-breaker

      - name: Set Sonar PR Variables
        if: startsWith(github.ref, 'refs/pull/')
        run: |
          SONAR_PR_VARIABLES="-Dsonar.pullrequest.key=${{ github.event.number }}"
          SONAR_PR_VARIABLES+=" -Dsonar.pullrequest.branch=${{ env.GITHUB_REF_NAME }}"
          SONAR_PR_VARIABLES+=" -Dsonar.pullrequest.base=master"
          echo "SONAR_PR_VARIABLES=${SONAR_PR_VARIABLES}" >> $GITHUB_ENV

      - name: Run Validation
        env:
          MAVEN_OPTS: '-Xmx2000m'
        run: |
          mvn -e -Psonarqube-validations clean package jacoco:report sonar:sonar ${{ env.SONAR_PR_VARIABLES }} \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
              -Dsonar.projectKey=checkstyle_sonar-checkstyle \
              -Dsonar.organization=checkstyle \
              -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
          cat target/sonar/report-task.txt
  
      - name: Verify Sonar Gate Status
        env:
          SONAR_API_TOKEN: '${{ secrets.SONAR_TOKEN }}'
        run: |
          sed -i'' "s|our.sonar.server|sonarcloud.io|" .ci-build-breaker/sonar_break_build.sh
          .ci-build-breaker/sonar_break_build.sh
